
services:
  crowdsec:
    image: crowdsecurity/crowdsec
    container_name: crowdsec
    environment:
      TZ: ${TZ}
      BOUNCER_KEY_TRAEFIK: ${CROWDSEC_TRAEFIK}
      COLLECTIONS: crowdsecurity/traefik crowdsecurity/appsec-virtual-patching crowdsecurity/appsec-generic-rules  crowdsecurity/http-cve  crowdsecurity/appsec-crs crowdsecurity/whitelist-good-actors 
      #DISABLE_COLLECTIONS: crowdsecurity/http-probing crowdsecurity/http-crawl-non_statics 
      #ENROLL_INSTANCE_NAME:	${RUNNER_NAME}
      POSTOVERFLOWS: crowdsecurity/seo-bots-whitelist
      PARSERS: crowdsecurity/whitelists
      ENROLL_KEY: clz0k6fyn0007lg089m9g8g17
      ENROLL_TAGS: docker
    healthcheck:
      test: ["CMD", "cscli", "capi", "status"]
    networks:
      - proxy_default
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - crowdsec_db:/var/lib/crowdsec/data
      - crowdsec_etc:/etc/crowdsec
      - accesslog:/var/log/traefik:ro
      #- ./acquis.yaml:/etc/crowdsec/acquis.yaml:ro #CICD
      #- /var/log/auth.log:/var/log/auth.log:ro
      #- /var/log/crowdsec:/var/log/crowdsec:ro
    restart: unless-stopped

  proxy:
    image: traefik:v3
    command:
      - --providers.docker.network=proxy_default
      - "--log"
      - "--log.level=${LOG_LEVEL:-INFO}"
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--serversTransport.insecureSkipVerify=true" 
      - "--entrypoints.web.address=:8888"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:8443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certresolver=letsencrypt"
      - --certificatesresolvers.letsencrypt.acme.email=${MAILMANAGER}
      - --certificatesresolvers.letsencrypt.acme.storage=/data/acme.json
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.delaybeforecheck=300"
      #- "--certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=8.8.8.8:53"
      - --global.checknewversion=${TRAEFIK_CHECK_NEW_VERSION:-false}
      - --global.sendanonymoususage=${TRAEFIK_SEND_ANONYMOUS_USAGE:-false}
      - --ping
      - --accesslog=true
      - --accesslog.filepath=/var/log/traefik/access.log
      - --providers.file.filename=/data/traefik.yml
    secrets:
      - cf_token
    environment:
      - CLOUDFLARE_DNS_API_TOKEN_FILE=/run/secrets/cf_token
      - CLOUDFLARE_HTTP_TIMEOUT=${HTTP_TIMEOUT}
      - CLOUDFLARE_POLLING_INTERVAL=${POLLING_INTERVAL}
      - CLOUDFLARE_PROPAGATION_TIMEOUT=${PROPAGATION_TIMEOUT}
      - CLOUDFLARE_TTL=${TTL}
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true

        - traefik.http.routers.api.rule=Host(`traefik.${ROOT_DOMAIN}`)
        - traefik.http.routers.api.service=api@internal
        - traefik.http.routers.api.entrypoints=websecure
        - traefik.http.routers.api.tls=true

        - traefik.http.services.api.loadbalancer.server.port=8080
    ports:
      # HTTP
      - target: 8888
        published: 8888
        mode: host

      # HTTPS
      - target: 8443
        published: 8443
        mode: host
        
      # Web UI (enabled by --api.insecure=true)
      - target: 8080
        published: 8080
        mode: host
    healthcheck:
      test: ['CMD', 'traefik', 'healthcheck', '--ping']
    volumes:
      - proxydata:/data
      - accesslog:/var/log/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - proxy_default
    security_opt:
      - no-new-privileges:true
      
  tunnel:
    container_name: cloudflared-tunnel
    image: cloudflare/cloudflared
    restart: unless-stopped
    command: tunnel run
    networks:
      - proxy_default
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
      
  cloudflare-companion:
    image: ghcr.io/tiredofit/docker-traefik-cloudflare-companion:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints:
          - node.role == manager
    environment:
      - TIMEZONE=${TZ}
      - LOG_TYPE=CONSOLE
      - LOG_LEVEL=INFO
      - TRAEFIK_VERSION=3
      - RC_TYPE=CNAME
      - TARGET_DOMAIN=${ROOT_DOMAIN}
      - REFRESH_ENTRIES=TRUE
      #- DOCKER_SWARM_MODE=TRUE
      - ENABLE_TRAEFIK_POLL=TRUE
      - TRAEFIK_POLL_URL=http://traefik.${ROOT_DOMAIN}/
      - TRAEFIK_FILTER_LABEL=traefik.constraint
      - TRAEFIK_FILTER=proxy-public
      - DOMAIN1=${ROOT_DOMAIN}
      - DOMAIN1_ZONE_ID=${ZONE_ID}
      - DOMAIN1_PROXIED=TRUE
    restart: always
    networks:
      - proxy_default
    secrets:
      - cf_token
      
volumes:
  accesslog:
  crowdsec_db:
     driver_opts:
           type: none
           device: ${VOL_CROWDSECDB}
           o: bind
  crowdsec_etc:
     driver_opts:
           type: none
           device: ${VOL_CROWDSECETC}
           o: bind
  proxydata:
     driver_opts:
           type: none
           device: ${VOL_PROXY}
           o: bind
