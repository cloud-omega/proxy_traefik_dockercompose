networks:
  demo:

volumes:
  n8n_storage:
    driver_opts:
      type: none
      device: ${VOL_N8N}
      o: bind    
  ollama_storage:
    driver_opts:
      type: none
      device: ${VOL_OLLAMA}
      o: bind  
  qdrant_storage:
      
x-n8n: &service-n8n
  image: n8nio/n8n:latest
  environment:
    - TZ
    - N8N_HOST=psy.serveblog.net
    - N8N_PORT=5678
    - N8N_PROTOCOL=https
    - NODE_ENV=production
    - WEBHOOK_URL=https://psy.serveblog.net/
    - GENERIC_TIMEZONE="${TZ}"
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
  networks:
    - proxy_default
    - demo
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - n8n_storage:/home/node/.n8n
    - ${VOL_N8N}/backup:/backup
  container_name: n8n
  labels:
    - traefik.enable=true
    - traefik.docker.network=proxy_default
    - traefik.frontend.entryPoints=web,websecure
    - traefik.http.services.n8n.loadbalancer.server.port=5678
    - traefik.http.routers.n8n.tls=true
    - traefik.http.routers.n8n.tls.certresolver=letsencrypt
    - traefik.http.routers.n8n.rule=Host(`psy.serveblog.net`) # && PathPrefix(`/n8n`)

services:
  n8n-import:
    <<: *service-n8n
    container_name: n8n-import
    entrypoint: /bin/sh
    command:
      - "-c"
      - "n8n import:credentials --separate --input=/backup/credentials && n8n import:workflow --separate --input=/backup/workflows"

  n8n:
    <<: *service-n8n
    container_name: n8n
    restart: unless-stopped
    depends_on:
      n8n-import:
        condition: service_completed_successfully

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    networks: ['demo']
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage

  ollama-cpu:
    image: ollama/ollama:latest
    environment:
      - OLLAMA_MAX_LOADED=1
      - OLLAMA_NUM_THREADS=2
      - OLLAMA_CUDA=0
      - OLLAMA_MODELS=llama3.1
    container_name: ollama
    networks: ['demo']
    restart: unless-stopped
    volumes:
      - ollama_storage:/root/.ollama
    healthcheck:
      #test: ["CMD-SHELL", "ollama pull ${OLLAMA_MODEL} || exit 1"]
      test: ["CMD-SHELL", "ollama list || exit 1"]
    #entrypoint: /bin/sh
    #command:      - "-c"      - "sleep 3; OLLAMA_HOST=ollama:11434 ollama pull llama3.1; "
    
  gotenberg:
    image: gotenberg/gotenberg:8
    environment:
      - UID=${UID}
      - GID=${GID}
    #ports:      - "3000:3000"
