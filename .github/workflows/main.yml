name: Docker Compose Up for Production

on:
  push:
    branches:
      - main
permissions:
  contents: write

jobs:
  #readme:
    #runs-on: self-hosted
    #steps:
        #- name: action-docs
          #uses: Dirrk/action-docs@v1.0.1
          #with:
            # Directory that contains the action.yml and README.md
            #action_docs_working_dir: .github/workflows # optional, default is .
            # Template file to use for rendering the markdown docs
            #action_docs_template_file: # optional, default is /src/default_template.tpl
            # If true it will commit and push the changes
            #action_docs_git_push: # optional, default is true
            # Commit message
            #action_docs_git_commit_message: # optional, default is action-docs: automated action
          
  run:
    runs-on: self-hosted    
    env:
      TZ: ${{ secrets.TZ }}
      MAILMANAGER: ${{ secrets.MAILMANAGER }}
      SITE_PATH: ${{ secrets.PORTAINER_PATH }}
      DOMAIN_NAME: ${{ secrets.PORTAINER_URL }}
      VOL_PROXY: ${{ secrets.VOL_PROXY }}
      VOL_PORTAINER: ${{ secrets.VOL_PORTAINER }}
      VOL_CROWDSECDB: ${{ secrets.VOL_PROXY }}/crowdsec_data
      VOL_CROWDSECETC: ${{ secrets.VOL_PROXY }}/crowdsec_etc
      VOL_OLLAMA: ${{ secrets.VOL_OLLAMA }}
      CROWDSEC_TRAEFIK: ${{ secrets.CROWDSEC_TRAEFIK }}
      FILE_PPTP: ${{ secrets.VOL_PROXY }}/pptp_user
      NOIP_USER: ${{secrets.NOIP_USER}}
      NOIP_PASS: ${{secrets.NOIP_PASS}}
      NOIP_URL1: ${{secrets.NOIP_URL1}}
      NOIP_URL2: ${{secrets.NOIP_URL2}}
      NOIP_URL3: ${{secrets.NOIP_URL3}}
      DYNU_SITE1: ${{secrets.DYNU_SITE1}}
      DYNV6_SITE1: ${{secrets.DYNV6_SITE1}}
      DYNV6_SITE2: ${{secrets.DYNV6_SITE2}}
      VOL_HA: ${{ secrets.VOL_PROXY }}/homeassistant-cfg
      VOL_N8N: ${{ secrets.VOL_PROXY }}/n8n-cfg
      VOL_POSTGRES: ${{ secrets.VOL_POSTGRES }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_DB: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      OLLAMA_BASE_URL: http://host.docker.internal:11434

      UID: 1001
      GID: 1001

    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .
            compose
            conf

      #- name: Login to Docker Hub (optional)
      #  run: |
      #    echo "$DOCKER_HUB_USERNAME:$DOCKER_HUB_PASSWORD" | docker login --username --password-stdin


      - name: Prepare env
        if: always()
        run: |
          mkdir -pv $VOL_PROXY $VOL_PORTAINER $VOL_CROWDSECDB $VOL_CROWDSECETC $VOL_N8N $VOL_HA $VOL_POSTGRES
          cat conf/ha-conf.yaml > $VOL_HA/configuration.yaml
          sed -i "s,replace-me,${CROWDSEC_TRAEFIK},g" conf/traefik.yml
          sed -i "s,REPLACE_DOMAIN,${DOMAIN_NAME},g" conf/traefik.yml         
          cp -fv conf/traefik.yml $VOL_PROXY
          cp -fv conf/acquis.yaml $VOL_CROWDSECETC
          #echo "${NOIP_USER} * ${NOIP_PASS} *" > /root/chap-secrets
          docker network create proxy_network --subnet "192.168.177.0/24" || true
          docker network create db --subnet "192.168.179.0/24" || true
          docker network create llm --subnet "192.168.178.0/24" || true

      - name: Update Docker Compose
        if: always()
        run: docker compose pull

      - name: Stop Docker Compose
        if: always()
        run: docker compose down --remove-orphans -v
        
      - name: Env file
        run: |
          printenv | grep -i proxy
          # cat compose.yml 
          # printenv > $VOL_PROXY/.env

      - name: Run Docker Compose Up
        run: docker compose up -d --wait #--force-recreate
        
      - name: Views logs
        run: docker compose logs --tail 30
      - name: crowdsec update
        run: |
          docker compose exec crowdsec cscli hub update
          docker compose exec crowdsec cscli hub upgrade
          docker compose up -d     
